# fejo prompt theme
# kudos to https://github.com/garybernhardt/dotfiles/blob/master/.zsh/func/prompt_grb_setup for the basic version
# kudos to https://github.com/mkalmes/dotfiles/blob/master/zshrc for the idea to use vcs_info
# kudos  from wunjo /grb prompt theme and modified

autoload -Uz vcs_info
zstyle ':vcs_info:*'           enable             git
zstyle ':vcs_info:git:*'       check-for-changes  true
zstyle ':vcs_info:git:*:-all-' command            /usr/local/bin/git

autoload colors; colors

prompt_fejo_help () {
  cat <<'EOF'

  prompt fejo
EOF
}

rst="%{%b%s%u$reset_color%}"
bgc="%{%(?.$rst.%S)%}"

coloratom() {
  local off=$1 atom=$2
  if [[ $atom[1] == [[:upper:]] ]]; then
    off=$(( $off + 60 ))
  fi
  echo $(( $off + $colorcode[${(L)atom}] ))
}

colorword() {
  local fg=$1 bg=$2 att=$3
  local -a s

  if [ -n "$fg" ]; then
    s+=$(coloratom 30 $fg)
  fi
  if [ -n "$bg" ]; then
    s+=$(coloratom 40 $bg)
  fi
  if [ -n "$att" ]; then
    s+=$attcode[$att]
  fi

  echo "%{"$'\e['${(j:;:)s}m"%}"
}

prompt_fejo_setup() {

  setopt noxtrace localoptions

  precmd () {
    typeset -A colorcode
    colorcode[black]=0
    colorcode[red]=1
    colorcode[green]=2
    colorcode[yellow]=3
    colorcode[blue]=4
    colorcode[magenta]=5
    colorcode[cyan]=6
    colorcode[white]=7
    colorcode[default]=9
    colorcode[k]=$colorcode[black]
    colorcode[r]=$colorcode[red]
    colorcode[g]=$colorcode[green]
    colorcode[y]=$colorcode[yellow]
    colorcode[b]=$colorcode[blue]
    colorcode[m]=$colorcode[magenta]
    colorcode[c]=$colorcode[cyan]
    colorcode[w]=$colorcode[white]
    colorcode[.]=$colorcode[default]

    typeset -A attcode
    attcode[none]=00
    attcode[bold]=01
    attcode[faint]=02
    attcode[standout]=03
    attcode[underline]=04
    attcode[blink]=05
    attcode[reverse]=07
    attcode[conceal]=08
    attcode[normal]=22
    attcode[no-standout]=23
    attcode[no-underline]=24
    attcode[no-blink]=25
    attcode[no-reverse]=27
    attcode[no-conceal]=28

    local -A pc

    pc[default]='default'
    pc[time]='cyan'
    pc[punc]='yellow'
    pc[line]='magenta'
    pc[hist]='green'
    pc[rvm_version]='blue'
    pc[pink]='blue'
    pc[rc]='red'
    pc[scm_branch]='yellow'
    pc[scm_status_dirty]='red'
    pc[scm_status_staged]='green'
    if [ $UID -eq 0 ]; then
      pc[host]='red'
      pc[user]='red'
      pc[path]='red'
      pc[#]='red'
      pc[shortpath]='red'
      pc[arrow]='red'
    else
      pc[host]='green'
      pc[user]='magenta'
      pc[path]='cyan'
      pc[#]='yellow'
      pc[shortpath]='default'
      pc[arrow]='green'
    fi
    for cn in ${(k)pc}; do
      pc[${cn}]=$(colorword $pc[$cn])
    done
    pc[reset]=$(colorword . . 00)

    local ex=$?
    psvar=()

    if [[ $ex -ge 128 ]]; then
      sig=$signals[$ex-127]
      psvar[1]="sig${(L)sig}"
    else
      psvar[1]="$ex"
    fi

    zstyle ':vcs_info:git:*' actionformats      "[$pc[scm_branch]%b|%a$pc[reset]%u%c]"
    zstyle ':vcs_info:git:*' formats            "[$pc[scm_branch]%b$pc[reset]%u%c]"
    zstyle ':vcs_info:git:*' unstagedstr        "$pc[scm_status_dirty]âœ–$pc[reset]"
    zstyle ':vcs_info:git:*' stagedstr          "$pc[scm_status_staged]â†‘$pc[reset]"
    vcs_info

    local p_rvm
    p_rvm=""

    type rvm-prompt >/dev/null 2>&1
    if [ "$?" -eq 0 ]; then
      p_rvm='[$(rvm-prompt i v)]'
    fi

    PROMPT=""

    if [ $USER != "$my_user" ]; then
      PROMPT+="$pc[user]%n@"
    fi

    if [ $HOST != "$my_host" ]; then
      PROMPT+="$pc[host]%m$pc[reset]:"
    fi

    PROMPT+="$pc[shortpath]%C$pc[reset]"
    PROMPT+=$vcs_info_msg_0_

    local table_flip="(â•¯Â°â–¡Â°ï¼‰â•¯ï¸µ $pc[pink]ðŸŽ§$pc[reset]"

    PROMPT+="%(?..${table_flip}) $pc[#]\$$rst "

    RPROMPT="$pc[rvm_version]$p_rvm$pc[reset]"
    if [ $SHOW_TIME_IN_PROMPT ]; then
      RPROMPT+=" $pc[time]%D{%T}$pc[reset]"
    fi

    export PROMPT RPROMPT
  }

  preexec () { }
}

prompt_fejo_setup "$@"

# vim:set ft=zsh:
